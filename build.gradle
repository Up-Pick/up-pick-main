// 루트 프로젝트는 하위 프로젝트들을 관리하는 역할만 합니다.
// 'apply false'를 통해 플러그인을 루트에는 적용하지 않고, 하위 모듈에서 필요에 따라 적용하도록 합니다.
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

// 모든 하위 프로젝트에 적용될 공통 설정 (그룹, 버전, 저장소)
allprojects {
    group = 'org.oneog'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

// 모든 하위 프로젝트에 적용될 공통 플러그인, 자바 설정, 의존성 관리
subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    // QueryDSL: generated sources 디렉터리 추가 및 컴파일 타임 annotation processor 설정
    sourceSets {
        main {
            java {
                // QueryDSL이 생성하는 Q-타입을 포함시킵니다.
                srcDir("$buildDir/generated/querydsl")
            }
        }
    }

    // Java 컴파일 시 annotation processor가 생성한 소스를 인식하도록 설정
    tasks.withType(JavaCompile).configureEach {
        // annotationProcessor configuration을 processor path로 사용
        options.annotationProcessorPath = configurations.annotationProcessor
        // QueryDSL이 생성하는 소스 위치
        options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/querydsl")
    }

    // Spring Boot BOM을 전역으로 import 해서 하위 모듈들의 버전 관리를 맡깁니다.
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.5.6"
        }
    }
}

// 전역으로 사용할 변수 설정
ext {
    querydslVersion = '5.1.0'
    jjwtVersion = '0.13.0'
    springCloudAwsVersion = '3.4.0'
}