import org.asciidoctor.gradle.jvm.AsciidoctorTask
import org.springframework.boot.gradle.tasks.bundling.BootJar

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '4.0.5' // spring rest docs (bumped for Gradle 8 compatibility)
}

// 의존성 버전은 루트 프로젝트에서 관리합니다.
dependencyManagement {
    imports {
        mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}"
    }
}


// configuration for Asciidoctor extensions used by the asciidoctor task
configurations {
    asciidoctorExtensions
}


dependencies {
    // 공통 모듈 의존성 추가
    implementation project(':uppick-common')

    // QueryDSL (ensure module has processor on compile)
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // uppick-main 모듈에 남아있는 다른 도메인들을 위한 의존성
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

    // API 문서화를 위한 RestDocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

// REST Docs 스니펫 디렉토리 설정
ext {
    snippetsDir = file('build/generated-snippets')
}

// restdocs-index.gradle 스크립트 경로 수정
apply from: rootProject.file('gradle/scripts/restdocs-index.gradle')

tasks.named('test', Test) {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy 'asciidoctor'
}

tasks.named('asciidoctor', AsciidoctorTask) {
    inputs.dir snippetsDir
    configurations('asciidoctorExtensions')
    dependsOn tasks.named('generateRestDocsIndex')
    baseDirFollowsSourceDir()
    attributes('snippets': snippetsDir)
}

tasks.named('bootJar', BootJar) {
    dependsOn tasks.named('asciidoctor')
    from(layout.buildDirectory.dir('docs/asciidoc').map { it.asFile }) {
        into 'static/docs'
    }
}
