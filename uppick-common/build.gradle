plugins {
    id 'java-library'
}

dependencies {
    // @RestControllerAdvice, @Component, DTO 등 공통 코드에 필요한 Spring 의존성
    // 'api'를 사용하면 이 모듈을 임포트하는 다른 모듈에서 해당 라이브러리를 직접 사용할 수 있습니다.
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-validation'

    // JWT
    api "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // Lombok
    api 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    api "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 테스트를 위한 의존성
    api 'org.springframework.boot:spring-boot-starter-test'
    api 'org.springframework.security:spring-security-test'
}

// 테스트 실행을 위한 설정
tasks.named('test') {
    useJUnitPlatform()
}
